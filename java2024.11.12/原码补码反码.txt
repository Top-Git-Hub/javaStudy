1，原码：十进制的二进制表现形式，最左边是符号位，0为正，1为负
例如56的原码为00111000，第一个0为符号位，后面为具体数值
00111000的各位称为bit，也叫比特位，八个bit称为一个字节
一个字节最大值为01111111转为十进制也就是127
最小值为11111111转化为十进制也就是-127
利用运用原码对正数进行运算是没有错误的
进行负数计算时，实际结果与我们预期结果相反
2，反码：为解决原码不能计算负数出现的
计算规则：正数的反码不变，负数的反码在原码的基础上，符号位不变，数值取反，1变0，0变1 
例子：-56的原码： 10111000；反码：11000111
-56+1=-55，11000111+1=11001000
经过计算可得55的二进制数为00110111
所以-55的原码为10110111
反码为11001000所以与预期相等
补码：
补码就是将反码错开一位，例如-1的反码为11111110，则-2的补码就是11111110
正数的原码等于反码等于补码
-128既没有原码也没有反码只有补码=10000000
byte只有一个字节
short有两个字节
int有4个字节
long有八个字节